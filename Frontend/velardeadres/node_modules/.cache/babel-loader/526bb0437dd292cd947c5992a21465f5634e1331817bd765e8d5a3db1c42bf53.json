{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { RouterLink, RouterView } from 'vue-router';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isAuthenticated = ref(false);\n    onMounted(() => {\n      isAuthenticated.value = localStorage.getItem('token') !== null;\n    });\n    const __returned__ = {\n      isAuthenticated,\n      ref,\n      onMounted,\n      get RouterLink() {\n        return RouterLink;\n      },\n      get RouterView() {\n        return RouterView;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","RouterLink","RouterView","isAuthenticated","value","localStorage","getItem"],"sources":["C:/VUEJS/MVT/Frontend/velardeadres/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from 'vue';\nimport { RouterLink, RouterView } from 'vue-router';\n \nconst isAuthenticated = ref(false);\n\nonMounted(() => { \n  isAuthenticated.value = localStorage.getItem('token') !== null;\n});\n</script>\n\n<template>\n  <div id=\"app\">\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\" />\n    <nav v-if=\"isAuthenticated\"> \n      <RouterLink to=\"/\">Direcciones</RouterLink>\n      <RouterLink to=\"/nuevo\">Nuevo</RouterLink>\n    </nav> \n    <RouterView />\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nnav {\n  margin-bottom: 20px;\n}\n\nnav a {\n  margin-right: 15px;\n  text-decoration: none;\n  color: #42b983;\n}\n</style>"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,UAAU,EAAEC,UAAU,QAAQ,YAAY;;;;;;;IAEnD,MAAMC,eAAe,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAElCC,SAAS,CAAC,MAAM;MACdG,eAAe,CAACC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;IAChE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}