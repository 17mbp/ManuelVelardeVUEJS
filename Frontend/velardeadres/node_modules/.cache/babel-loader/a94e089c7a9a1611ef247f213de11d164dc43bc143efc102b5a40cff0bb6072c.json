{"ast":null,"code":"import axios from \"axios\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  setup() {\n    const isAuthenticated = ref(false);\n    onMounted(() => {\n      isAuthenticated.value = localStorage.getItem('token') !== null;\n      backend();\n    });\n    const token = localStorage.getItem(\"token\");\n    const clientes = ref([]);\n    const backend = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/direcciones\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        clientes.value = response.data;\n        console.log(clientes.value);\n      } catch (error) {\n        console.log();\n      }\n    };\n    const borrar = async (id, nombre) => {\n      const confirmar = window.confirm(`Seguro de quitar direccion del cliente: ${nombre}`);\n      if (confirmar) {\n        try {\n          await axios.delete(`http://localhost:3000/direcciones/${id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          backend();\n        } catch (error) {\n          console.log(\"Error \", error);\n        }\n      }\n    };\n    return {\n      clientes,\n      borrar,\n      backend\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","setup","isAuthenticated","value","localStorage","getItem","backend","token","clientes","response","get","headers","Authorization","data","console","log","error","borrar","id","nombre","confirmar","window","confirm","delete"],"sources":["C:\\VUEJS\\MVT\\Frontend\\velardeadres\\src\\views\\DireccionesList.vue"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nexport default {\r\n    setup() {\r\n        const isAuthenticated = ref(false);\r\n        onMounted(() => {\r\n            isAuthenticated.value = localStorage.getItem('token') !== null;\r\n            backend();\r\n        });\r\n        const token = localStorage.getItem(\"token\");\r\n        const clientes = ref([]);\r\n        const backend = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:3000/direcciones\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                clientes.value = response.data;\r\n                console.log(clientes.value);\r\n            } catch (error) {\r\n                console.log();\r\n            }\r\n        };\r\n        const borrar = async (id, nombre) => {\r\n            const confirmar = window.confirm(`Seguro de quitar direccion del cliente: ${nombre}`);\r\n            if (confirmar) {\r\n                try {\r\n                    await axios.delete(`http://localhost:3000/direcciones/${id}`, {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    });\r\n                    backend();\r\n                } catch (error) {\r\n                    console.log(\"Error \", error);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            clientes,\r\n            borrar,\r\n            backend\r\n        };\r\n    }\r\n};\r\n</script>\r\n<template>\r\n    <main>\r\n        <nav v-if=\"isAuthenticated\">\r\n            <RouterLink to=\"/nuevo\">Nuevo</RouterLink>\r\n        </nav>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Nombre</th>\r\n                    <th>Apellido Materno</th>\r\n                    <th>Apellido Paterno</th>\r\n                    <th>Correo Electronico</th>\r\n                    <th>Domicilio</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"cliente in clientes\" :key=\"cliente.id\">\r\n                    <td>{{ cliente.id }}</td>\r\n                    <td>{{ cliente.nombre }}</td>\r\n                    <td>{{ cliente.apellidopaterno }}</td>\r\n                    <td>{{ cliente.apellidomaterno }}</td>\r\n                    <td>{{ cliente.email }}</td>\r\n                    <td>{{ cliente.domicilio }}</td>\r\n                    <td>\r\n                        <button @click=\"borrar(cliente.id, cliente.nombre)\">\r\n                            Borrar\r\n                        </button>\r\n                        <RouterLink :to=\"{ path: 'editar/' + cliente.id }\">Editar</RouterLink>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </main>\r\n</template>\r\n<style></style>, onMounted"],"mappings":"AACA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,eAAc,GAAIH,GAAG,CAAC,KAAK,CAAC;IAClCC,SAAS,CAAC,MAAM;MACZE,eAAe,CAACC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,MAAM,IAAI;MAC9DC,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;IACF,MAAMC,KAAI,GAAIH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMG,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,OAAM,GAAI,MAAAA,CAAA,KAAY;MACxB,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmC,EAAE;UAClEC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUL,KAAK;UAClC;QACJ,CAAC,CAAC;QACFC,QAAQ,CAACL,KAAI,GAAIM,QAAQ,CAACI,IAAI;QAC9BC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACL,KAAK,CAAC;MAC/B,EAAE,OAAOa,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAAC,CAAC;MACjB;IACJ,CAAC;IACD,MAAME,MAAK,GAAI,MAAAA,CAAOC,EAAE,EAAEC,MAAM,KAAK;MACjC,MAAMC,SAAQ,GAAIC,MAAM,CAACC,OAAO,CAAC,2CAA2CH,MAAM,EAAE,CAAC;MACrF,IAAIC,SAAS,EAAE;QACX,IAAI;UACA,MAAMtB,KAAK,CAACyB,MAAM,CAAC,qCAAqCL,EAAE,EAAE,EAAE;YAC1DP,OAAO,EAAE;cACLC,aAAa,EAAE,UAAUL,KAAK;YAClC;UACJ,CAAC,CAAC;UACFD,OAAO,CAAC,CAAC;QACb,EAAE,OAAOU,KAAK,EAAE;UACZF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,KAAK,CAAC;QAChC;MACJ;IACJ;IACA,OAAO;MACHR,QAAQ;MACRS,MAAM;MACNX;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}